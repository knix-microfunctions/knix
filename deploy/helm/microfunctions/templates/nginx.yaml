#   Copyright 2020 The KNIX Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nginx.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "nginx.name" . | quote }}
    release: {{ .Release.Name | quote }}
spec:
  type: NodePort
  ports:
  - name: http
    port: {{ .Values.nginx.httpPort }}
    nodePort: {{ .Values.nginx.httpPort }}
    targetPort: 8080
{{ if (.Values.nginx.httpsPort) }}
  - name: https
    port: {{ .Values.nginx.httpsPort }}
    nodePort: {{ .Values.nginx.httpsPort }}
    targetPort: 8443
{{ end }}
  selector:
    app: {{ include "nginx.name" . | quote }}
    release: {{ .Release.Name | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "nginx.fullname" . }}-nginx-conf"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "nginx.name" . | quote }}
    release: {{ .Release.Name | quote }}
data:
  mfn.conf: |-
    log_format mfn_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    server {
      listen 8080;
{{ if (.Values.nginx.httpsPort) }}
      listen 8443 ssl;
      keepalive_timeout 0;
      # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
      ssl_certificate /opt/mfn/nginx/ssl/..data/cert;
      ssl_certificate_key /opt/mfn/nginx/ssl/..data/key;
      ssl_session_timeout 1d;
      ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
      ssl_session_tickets off;
      ssl_dhparam /opt/mfn/nginx/ssl/..data/dhparam;

      # intermediate configuration
      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
      ssl_prefer_server_ciphers off;
      # HSTS (ngx_http_headers_module is required) (63072000 seconds)
      add_header Strict-Transport-Security "max-age=63072000" always;
      # OCSP stapling
      #ssl_stapling on;
      #ssl_stapling_verify on;

      # verify chain of trust of OCSP response using Root CA and Intermediate certs
      ssl_trusted_certificate /opt/mfn/nginx/ssl/..data/ca;
{{ end }}
      client_max_body_size 100m;

      access_log /opt/mfn/nginx/access.log mfn_log;
      error_log /opt/mfn/nginx/error.log info;

      root /opt/mfn/nginx/gui;
      location {{ .Values.nginx.location }} {
        alias /opt/mfn/nginx/gui/;
      }
      location /management {
        proxy_pass http://wf-{{ .Release.Name }}-management.{{ .Release.Namespace }}.svc;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "nginx.name" . | quote }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: {{ .Values.nginx.Replicas }}
  selector:
    matchLabels:
        app: {{ include "nginx.name" . | quote }}
        release: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app: {{ include "nginx.name" . | quote }}
        release: {{ .Release.Name | quote }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        fsGroup: 101
      containers:
      - name: nginx
        image: "{{ .Values.imageRepo }}{{ .Values.nginx.imagePath }}:{{ .Values.nginx.imageTag }}"
        imagePullPolicy: "{{ .Values.nginx.imagePullPolicy }}"
        ports:
        - name: http
          containerPort: 8080
{{ if (.Values.nginx.httpsPort) }}
        - name: https
          containerPort: 8443
{{ end }}
        resources:
{{ toYaml .Values.nginx.resources | indent 10}}
        volumeMounts:
        - name: conf-volume
          mountPath: /etc/nginx/conf.d
{{ if (.Values.nginx.httpsPort) }}
        - name: nginx-ssl
          mountPath: "/opt/mfn/nginx/ssl"
          readOnly: true
{{ end }}
      volumes:
      - name: conf-volume
        configMap:
          name: "{{ template "nginx.fullname" . }}-nginx-conf"
{{ if (.Values.nginx.httpsPort) }}
      - name: nginx-ssl
        secret:
          secretName: "{{ template "nginx.fullname" . }}-nginx-ssl"
{{ end }}
{{ if (.Values.nginx.httpsPort) }}
---
apiVersion: v1
data:
  ca: {{ .Values.nginx.httpsCa }}
  cert: {{ .Values.nginx.httpsCert }}
  dhparam: LS0tLS1CRUdJTiBESCBQQVJBTUVURVJTLS0tLS0KTUlJQkNBS0NBUUVBLy8vLy8vLy8vLyt0K0ZSWW9ydEttcS9jVmlBblBUengyTG5GZzg0dE5wV3A0VFpCRkdRegorOHlUbmM0a216NzVmUy9qWTJNTWRkajJnYklDcnNSaGV0UGZIdFhWL1dWaEpEUDFIMThHYnRDRlkyVlZQZTBhCjg3VlhFMTUvVjhrMW1FOE1jT0RtaTNmaXBvbmE4Ky9vY2gzeFdLRTJyZWMxTUt6S1QwZzZlWHE4Q3JHQ3N5VDcKWWRFSXFVdXl5T1A3dVdyYXQyRFg5R2dkVDBLajNqbE45SzVXN2VkamNyc1pDd2VueU80S2JYQ2VBdnpoemZmaQo3TUEwQk0wb05DOWhrWEwrbk9tRmcvK09UeEl5N3ZLQmc4UCtPeHRNYjYxek83WDh2QzdDSUFYRmp2R0RmUmFECnNzYnpTaWJCc3UvNmlHdENPR0VvWEpmLy8vLy8vLy8vL3dJQkFnPT0KLS0tLS1FTkQgREggUEFSQU1FVEVSUy0tLS0t
  key: {{ .Values.nginx.httpsKey }}
kind: Secret
metadata:
  name: "{{ template "nginx.fullname" . }}-nginx-ssl"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "nginx.name" . | quote }}
    release: {{ .Release.Name | quote }}
type: Opaque
{{ end }}
