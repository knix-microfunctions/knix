#   Copyright 2020 The KNIX Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---
  # run as follows: ansible-playbook -K -e "@settings.json" frontend.yml
  # or as: ./run.sh frontend.yml
- hosts: frontend
  serial: 1

  vars:
    # location of mfn frontend deployment package on local machine
    frontend_dist: "../../HttpFrontend/target"
    frontend_jar: "frontend.jar"
    frontend_config: "frontend.properties"

    # installation path for frontend on target machine
    install_dir: "{{ mfn_server_installation_folder }}/frontend"

    # frontend service path on target machine
    service_name: mfn-frontend
    service_path: "/lib/systemd/system/{{ service_name }}.service"

    bind_address: "ansible_default_ipv4.address:51000"

  tasks:
  - name: get http_proxy
    shell: "su - -c 'echo $http_proxy'"
    register: http_proxy

  - name: get https_proxy
    shell: "su - -c 'echo $https_proxy'"
    register: https_proxy

  - set_fact:
      http_proxy: "{{ http_proxy.stdout }}"
      https_proxy: "{{ https_proxy.stdout }}"

  - debug:
      msg: 
        - inventory_hostname = {{ inventory_hostname }}
        - ansible_default_ipv4.address = {{ ansible_default_ipv4.address }}
        - frontend distribution folder = {{ frontend_dist }}
        - frontend executable jar = {{ frontend_jar }}
        - installation directory = {{ install_dir }}
        - service_name = {{ service_name }}
        - service_path = {{ service_path }}
        - http_proxy = {{ http_proxy }}
        - https_proxy = {{ https_proxy }}

  - name: stop service
    systemd:
      name: "{{ service_name }}"
      state: stopped
    ignore_errors: yes

  - name: create frontend folder
    file: path={{ install_dir }} state=directory

  - name: copy jar
    copy:
      src: "{{ frontend_dist }}/{{ frontend_jar }}"
      dest: "{{ install_dir }}/"

  #- name: change log folder for bare metal installation
  #  replace:
  #    path: "{{ install_dir }}/log4j2.properties"
  #    regexp: '^(appender.rolling.file\w+) = (\S+)$'
  #    replace: '\1 = ../\2'

  ### Create new config
  - name: create config
    copy:
      dest: "{{ install_dir }}/{{ frontend_config }}"
      content: |
        http_host={{ ansible_hostname }}
        http_port=51000
        http_timeout_ms=60000
        mfn_datalayer={{ ansible_default_ipv4.address }}
        mfn_datalayer_port=4998

  ### Copy and change config
  #- name: copy config
  #  copy:
  #    src: "{{ frontend_dist }}/{{ frontend_config }}"
  #    dest: "{{ install_dir }}/"
  #- name: config - update HTTP host
  #  lineinfile:
  #    path: "{{ install_dir }}/{{ frontend_config }}"
  #    regexp: ".*bind[^a-z_].*"
  #    line: "http_host = {{ ansible_default_ipv4.address }}"
  #- name: config - update HTTP port
  #  lineinfile:
  #    path: "{{ install_dir }}/{{ frontend_config }}"
  #    regexp: ".*bind[^a-z_].*"
  #    line: "http_port = {{ 51000 }}"
  #- name: config - update datalayer
  #  lineinfile:
  #    path: "{{ install_dir }}/{{ frontend_config }}"
  #    regexp: ".*mfn_datalayer[^_].*"
  #    line: "mfn_datalayer {{ ... }}"

  - name: provide separate log configuration
    copy: 
      dest: "{{ install_dir }}/log4j2.properties"
      src: "{{ frontend_dist }}/classes/log4j2.properties"

  - name: change log folder for bare metal installation
    replace:
      path: "{{ install_dir }}/log4j2.properties"
      regexp: '^(appender.rolling.file\w+) = (\S+)$'
      replace: '\1 = ../\2'

  - name: create run script
    copy:
      mode: '775'
      dest: "{{ install_dir }}/run_frontend.sh"
      content: |
        #!/bin/sh
        exec java -Dlog4j.configurationFile={{ install_dir }}/log4j2.properties -jar {{ frontend_jar }} {{ frontend_config }}

  - name: create service
    copy:
      dest: "{{ service_path }}"
      content: |
        [Unit]
        Description=MFN web frontend
        After=network.target
        [Service]
        OOMScoreAdjust=-1000
        Type=simple
        WorkingDirectory={{ install_dir }}
        PIDFile=/run/frontend.pid
        ExecStart={{ install_dir }}/run_frontend.sh
        KillMode=process
        [Install]
        WantedBy=multi-user.target

  - name: systemd install and enable service mfn-frontend
    systemd:
      daemon_reload: yes
      name: "{{ service_name }}"
      enabled: true
      state: restarted
    when: start_at_boot|bool

  - name: systemd install and disable service mfn-frontend
    systemd:
      daemon_reload: yes
      name: "{{ service_name }}"
      enabled: false
      state: stopped
    when: not start_at_bool|bool

  - name: create frontend systemctl start script
    copy:
      mode: '775'
      dest: "{{ install_dir }}/start.sh"
      content: |
        #!/bin/sh
        # frontend path: {{ install_dir }}
        sudo systemctl start {{ service_name }}

  - name: create frontend systemctl stop script
    copy:
      mode: '775'
      dest: "{{ install_dir }}/stop.sh"
      content: |
        #!/bin/sh
        # frontend path: {{ install_dir }}
        sudo systemctl stop {{ service_name }}
